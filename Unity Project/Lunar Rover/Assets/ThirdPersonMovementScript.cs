using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class ThirdPersonMovementScript : RoverPathSettings
{
    // Start is called before the first frame update

 private float fowardAccel = 8f, reverseAccel = 4f, maxSpeed = 50f, turnStrength = 180, gravityforce= 3f;
 private float speedInput, turnInput;
 public bool grounded;
 public LayerMask whatisGround;
 public float groundRayLenght = .5f;
 public Transform groundRayPoint;
 public Transform Earth;
 public Rigidbody theRB;
 public float timeVar;
 public float timeVar2;
 public bool doneWithRotation;
public bool done;
public float maxForwardSpeed;
public float maxRotationalSpeed;
private float[] xpoints;
private float[] zpoints;
private float[] xpointslow = {776f, 776f, 776f, 776f, 776f, 776f, 776f, 776f, 777f, 777f, 777f, 777f, 777f, 777f, 777f, 777f, 777f, 777f, 777f, 777f, 777f, 777f, 778f, 778f, 778f, 778f, 778f, 778f, 778f, 778f, 778f, 778f, 778f, 778f, 778f, 778f, 779f, 779f, 779f, 779f, 779f, 779f, 779f, 779f, 779f, 779f, 779f, 779f, 779f, 779f, 780f, 780f, 780f, 780f, 780f, 780f, 780f, 780f, 780f, 780f, 780f, 780f, 780f, 780f, 781f, 781f, 781f, 781f, 781f, 781f, 781f, 781f, 781f, 781f, 781f, 781f, 781f, 781f, 782f, 782f, 782f, 782f, 782f, 782f, 782f, 782f, 782f, 782f, 782f, 782f, 782f, 782f, 783f, 783f, 783f, 783f, 783f, 783f, 783f, 783f, 783f, 783f, 783f, 783f, 783f, 783f, 782f, 783f, 784f, 784f, 784f, 784f, 784f, 784f, 784f, 784f, 784f, 784f, 784f, 784f, 785f, 785f, 785f, 785f, 785f, 785f, 785f, 785f, 785f, 785f, 785f, 785f, 785f, 785f, 786f, 786f, 786f, 786f, 786f, 786f, 786f, 786f, 786f, 786f, 786f, 786f, 786f, 786f, 787f, 787f, 787f, 787f, 787f, 787f, 787f, 787f, 787f, 788f, 789f, 790f, 791f, 792f, 793f, 794f, 795f, 796f, 797f, 798f, 799f, 800f, 801f, 802f, 803f, 804f, 805f, 806f, 807f, 808f, 809f, 810f, 811f, 812f, 813f, 814f, 815f, 816f, 817f, 818f, 819f, 820f, 821f, 822f, 823f, 824f, 825f, 826f, 827f, 828f, 829f, 830f, 831f, 832f, 833f, 834f, 835f, 836f, 837f, 838f, 839f, 840f, 841f, 842f, 843f, 844f, 845f, 846f, 847f, 848f, 849f, 850f, 851f, 852f, 853f, 854f, 855f, 856f, 857f, 858f, 859f, 860f, 861f, 862f, 863f, 863f, 863f, 864f, 865f, 866f, 867f, 868f, 869f, 870f, 871f, 872f, 873f, 874f, 875f, 876f, 877f, 878f, 879f, 880f, 881f, 882f, 883f, 884f, 885f, 885f, 886f, 886f, 887f, 888f, 889f, 890f, 891f, 892f, 893f, 894f, 895f, 896f, 897f, 897f, 898f, 898f, 899f, 900f, 901f, 902f, 902f, 903f, 904f, 904f, 904f, 905f, 906f, 907f, 908f, 908f, 908f, 908f, 908f, 908f, 908f, 909f, 910f, 910f, 910f, 911f, 911f, 912f, 912f, 912f, 912f, 913f, 913f, 913f, 912f, 912f, 913f, 913f, 913f, 912f, 912f, 911f, 910f, 910f, 909f, 910f, 911f, 912f, 913f, 914f, 915f, 915f, 915f, 915f, 914f, 914f, 913f, 913f, 913f, 914f, 914f, 915f, 916f, 916f, 916f, 916f, 916f, 915f, 915f, 916f, 917f, 917f, 917f, 917f, 916f, 916f, 917f, 918f, 918f, 918f, 918f, 918f, 918f, 917f, 917f, 916f, 915f, 915f, 914f, 913f, 913f, 913f, 913f, 912f, 911f, 912f, 913f, 914f, 915f, 916f, 917f, 918f, 919f, 918f, 917f, 916f, 915f, 914f, 913f, 912f, 911f, 910f, 909f, 908f, 907f, 906f, 905f, 904f, 903f, 902f, 901f, 900f, 901f, 902f, 903f, 904f, 905f, 906f, 907f, 908f, 909f, 910f, 911f, 912f, 913f, 914f, 915f, 916f, 917f, 918f, 919f, 920f, 921f, 922f, 923f, 924f, 925f, 925f, 925f, 926f, 927f, 928f, 929f, 930f, 930f, 931f, 932f, 932f, 933f, 932f, 931f, 932f, 933f, 934f, 934f, 934f, 935f, 935f, 934f, 935f, 936f, 937f, 938f, 939f, 940f, 941f, 942f, 943f, 944f, 945f, 946f, 947f, 948f, 949f, 950f, 951f, 951f, 951f, 951f, 952f, 953f, 954f, 955f, 956f, 957f, 958f, 957f, 956f, 957f, 957f, 958f, 959f, 960f, 961f, 962f, 963f, 964f, 965f, 966f, 967f, 968f, 969f, 970f, 971f, 972f, 973f, 974f, 975f, 976f, 977f, 978f, 979f, 980f, 981f, 982f, 983f, 984f, 985f, 986f, 987f, 988f, 989f, 990f, 991f, 992f, 993f, 994f, 995f, 996f, 997f, 997f, 997f, 998f, 997f, 996f, 996f, 997f, 996f, 995f, 994f, 993f, 994f, 995f, 996f, 997f, 998f, 999f, 999f, 998f, 998f, 999f, 1000f, 1001f, 1002f, 1003f, 1003f, 1002f, 1002f, 1003f, 1003f, 1002f, 1001f, 1000f, 999f, 998f, 997f, 996f, 995f, 994f, 993f, 992f, 991f, 990f, 989f, 988f, 987f, 986f, 985f, 984f, 983f, 982f, 981f, 980f, 979f, 978f, 977f, 976f, 975f, 974f, 973f, 972f, 971f, 970f, 969f, 968f, 967f, 966f, 965f, 964f, 963f, 962f, 961f, 960f, 959f, 958f, 957f, 956f, 955f, 955f, 956f, 957f, 958f, 959f, 960f, 961f, 962f, 963f, 963f, 964f, 964f, 963f, 962f, 962f, 963f, 964f, 965f, 966f, 967f, 968f, 969f, 970f, 971f, 970f, 969f, 968f, 969f, 970f, 971f, 972f, 973f, 974f, 975f, 976f, 977f, 978f, 979f, 980f, 981f, 982f, 983f, 984f, 985f, 986f, 987f, 988f, 989f, 990f, 991f, 992f, 993f, 994f, 995f, 996f, 997f, 998f, 999f, 1000f, 1000f, 999f, 998f, 997f, 996f, 995f, 994f, 994f, 994f, 995f, 996f, 997f, 997f, 998f, 999f, 999f, 1000f, 1001f, 1002f, 1003f, 1004f, 1005f, 1006f, 1007f, 1008f, 1009f, 1010f, 1011f, 1012f, 1012f, 1013f, 1013f, 1014f, 1015f, 1016f, 1017f, 1018f, 1019f, 1020f, 1021f, 1022f, 1023f, 1024f, 1025f, 1026f, 1027f, 1028f, 1028f, 1029f, 1030f, 1031f, 1032f, 1033f, 1034f, 1035f, 1036f, 1037f, 1038f, 1039f, 1040f, 1040f, 1041f, 1042f, 1043f, 1044f, 1045f, 1046f, 1047f, 1048f, 1049f, 1050f, 1051f, 1052f, 1053f, 1054f, 1055f, 1056f, 1057f, 1058f, 1059f, 1060f, 1061f, 1062f, 1063f, 1064f, 1065f, 1066f, 1067f, 1068f, 1069f, 1070f, 1071f, 1072f, 1073f, 1074f, 1075f, 1076f, 1076f, 1076f, 1075f, 1074f, 1075f, 1076f, 1077f, 1078f, 1079f, 1080f, 1081f, 1082f, 1083f, 1084f, 1085f, 1086f, 1087f, 1086f, 1085f, 1084f, 1083f, 1084f, 1085f, 1086f, 1087f, 1087f, 1086f, 1085f, 1086f, 1087f, 1087f, 1088f, 1089f, 1090f, 1091f, 1092f, 1093f, 1094f, 1095f, 1096f, 1097f, 1098f, 1099f, 1100f, 1101f, 1102f, 1101f, 1101f, 1101f, 1100f, 1099f, 1099f, 1098f, 1097f, 1096f, 1095f, 1094f, 1093f, 1092f, 1093f, 1094f, 1095f, 1096f, 1097f, 1098f, 1099f, 1100f, 1101f, 1102f, 1102f, 1102f, 1102f, 1103f, 1104f, 1105f, 1106f, 1107f, 1108f, 1109f, 1109f, 1110f, 1111f, 1112f, 1111f, 1110f, 1109f, 1108f, 1107f, 1106f, 1105f, 1104f, 1103f, 1103f, 1104f, 1105f, 1104f, 1103f, 1102f, 1101f, 1100f, 1099f, 1098f, 1097f, 1098f, 1099f, 1100f, 1101f, 1102f, 1103f, 1104f, 1105f, 1106f, 1107f, 1108f, 1109f, 1110f, 1111f, 1112f, 1113f, 1114f, 1115f, 1116f, 1117f, 1118f, 1119f, 1120f, 1121f, 1122f, 1123f, 1124f, 1125f, 1126f, 1127f, 1126f, 1125f, 1126f, 1127f, 1128f, 1129f, 1130f, 1130f, 1129f, 1129f, 1130f, 1131f, 1132f, 1131f, 1132f, 1133f, 1134f, 1135f, 1136f, 1136f, 1137f, 1138f, 1139f, 1140f, 1141f, 1142f, 1143f, 1144f, 1145f, 1146f, 1146f, 1147f, 1148f, 1149f, 1150f, 1151f, 1152f, 1153f, 1154f, 1155f, 1156f, 1157f, 1158f, 1159f, 1160f, 1161f, 1162f, 1163f, 1164f, 1165f, 1166f, 1167f, 1168f, 1169f, 1170f, 1171f, 1172f, 1172f, 1173f, 1174f, 1175f, 1176f, 1177f, 1178f, 1179f, 1180f, 1181f, 1182f, 1183f, 1183f, 1182f, 1183f, 1184f, 1185f, 1186f, 1187f, 1187f, 1187f, 1188f, 1189f, 1190f, 1191f, 1192f, 1193f, 1194f, 1195f, 1196f, 1197f, 1198f, 1199f, 1199f, 1199f, 1199f, 1199f, 1199f, 1199f, 1199f, 1200f, 1201f, 1202f, 1203f, 1204f, 1204f, 1205f, 1206f, 1206f, 1206f, 1207f, 1207f, 1207f, 1207f, 1207f, 1207f, 1207f, 1207f, 1207f, 1207f, 1207f, 1207f, 1206f, 1206f, 1206f, 1205f, 1204f, 1203f, 1202f, 1201f, 1200f, 1199f, 1198f, 1197f, 1196f, 1195f, 1194f, 1193f, 1192f, 1191f, 1190f, 1189f, 1188f, 1187f, 1186f, 1185f, 1184f, 1183f, 1182f, 1181f, 1180f, 1179f, 1178f, 1177f, 1176f, 1175f, 1174f, 1173f, 1172f, 1171f, 1170f, 1169f, 1168f, 1167f, 1166f, 1165f, 1164f, 1163f, 1162f, 1161f, 1160f, 1159f, 1158f, 1158f, 1157f, 1157f, 1157f, 1158f, 1157f, 1156f, 1157f, 1158f, 1159f, 1160f, 1161f, 1162f, 1163f, 1164f, 1165f, 1166f, 1166f, 1167f, 1167f, 1166f, 1166f, 1167f, 1168f, 1168f, 1169f, 1170f, 1170f, 1171f, 1171f, 1172f, 1172f, 1171f, 1170f, 1170f, 1169f, 1168f, 1167f, 1166f, 1165f, 1164f, 1163f, 1162f, 1161f, 1160f, 1159f, 1158f, 1157f, 1156f, 1155f, 1154f, 1153f, 1152f, 1151f, 1150f, 1149f, 1148f, 1147f, 1146f, 1145f, 1144f, 1143f, 1142f, 1141f, 1140f, 1139f, 1138f, 1137f, 1136f, 1135f, 1134f, 1133f, 1132f, 1131f, 1130f, 1129f, 1128f, 1127f, 1126f, 1125f, 1124f, 1123f, 1122f, 1121f, 1120f, 1119f, 1118f, 1117f, 1117f, 1116f, 1115f, 1114f, 1113f, 1112f, 1111f, 1110f, 1109f, 1108f, 1107f, 1106f, 1105f, 1104f, 1103f, 1102f, 1101f, 1100f, 1099f, 1098f, 1097f, 1096f, 1095f, 1094f, 1093f, 1092f, 1091f, 1090f, 1089f, 1088f, 1087f, 1086f, 1085f, 1084f, 1083f, 1082f, 1081f, 1080f, 1079f, 1078f, 1077f, 1076f, 1075f, 1074f, 1073f, 1072f, 1071f, 1070f, 1069f, 1068f, 1067f, 1066f, 1066f, 1065f, 1064f, 1063f, 1062f, 1061f, 1060f, 1059f, 1058f, 1057f, 1056f, 1055f, 1054f, 1053f, 1052f, 1051f, 1051f, 1052f, 1053f, 1052f, 1051f, 1050f, 1049f, 1048f, 1047f, 1046f, 1045f, 1044f, 1043f, 1042f, 1041f, 1040f, 1039f, 1038f, 1037f, 1036f, 1036f, 1037f, 1038f, 1037f, 1036f, 1035f, 1034f, 1033f, 1032f, 1032f, 1031f, 1030f, 1029f, 1029f, 1028f, 1027f, 1026f, 1025f, 1024f, 1023f, 1022f, 1021f, 1020f, 1019f, 1018f, 1017f, 1016f, 1015f, 1014f, 1013f, 1012f, 1011f, 1010f, 1009f, 1009f, 1008f, 1007f, 1006f, 1005f, 1004f, 1003f, 1002f, 1001f, 1000f, 999f, 998f, 997f, 996f, 995f, 994f, 993f, 992f, 991f, 990f, 991f, 992f, 993f, 994f, 995f, 996f, 996f, 995f, 994f, 993f, 992f, 991f, 990f, 989f, 988f, 987f, 986f, 985f, 984f, 983f, 982f, 981f, 980f, 979f, 978f, 977f, 976f, 975f, 974f, 973f, 972f, 971f, 970f, 969f, 968f, 967f, 966f, 965f, 964f, 963f, 962f, 961f, 960f, 959f, 958f, 957f, 956f, 955f, 954f, 953f, 952f, 951f, 950f, 949f, 948f, 947f, 946f, 945f, 944f, 943f, 942f, 941f, 940f, 939f, 938f, 937f, 936f, 935f, 934f, 933f, 932f, 931f, 930f, 929f, 928f, 927f, 926f, 925f, 924f, 923f, 922f, 921f, 920f, 919f, 918f, 917f, 916f, 915f, 914f, 915f, 916f, 917f, 918f, 919f, 920f, 921f, 922f, 923f, 924f, 925f, 926f, 927f, 928f, 929f, 930f, 931f, 932f, 932f, 932f, 931f, 930f, 929f, 930f, 931f, 930f, 931f, 930f, 929f, 928f, 927f, 926f, 925f, 924f, 923f, 922f, 921f, 920f, 919f, 918f, 917f, 916f, 915f, 914f, 913f, 912f, 911f, 910f, 909f, 908f, 907f, 906f, 905f, 904f, 903f, 902f, 901f, 900f, 900f, 900f, 899f, 898f, 897f, 896f, 895f, 894f, 893f, 892f, 891f, 890f, 889f, 888f, 887f, 886f, 886f, 885f, 884f, 883f, 882f, 881f, 880f, 879f, 878f, 877f, 876f, 875f, 874f, 873f, 872f, 871f, 870f, 869f, 868f, 867f, 866f, 865f, 864f, 863f, 862f, 861f, 860f, 859f, 858f, 857f, 856f, 855f, 855f, 854f, 853f, 852f, 851f, 850f, 849f, 848f, 847f, 846f, 845f, 844f, 843f, 842f, 841f, 840f, 840f, 839f, 838f, 837f, 836f, 835f, 834f, 833f, 832f, 831f, 830f, 829f, 828f, 827f, 826f, 825f, 824f, 823f, 822f};
private float[] zpointslow = {165f, 166f, 167f, 168f, 169f, 170f, 171f, 172f, 173f, 174f, 175f, 176f, 177f, 178f, 179f, 180f, 181f, 182f, 183f, 184f, 185f, 186f, 187f, 188f, 189f, 190f, 191f, 192f, 193f, 194f, 195f, 196f, 197f, 198f, 199f, 200f, 201f, 202f, 203f, 204f, 205f, 206f, 207f, 208f, 209f, 210f, 211f, 212f, 213f, 214f, 215f, 216f, 217f, 218f, 219f, 220f, 221f, 222f, 223f, 224f, 225f, 226f, 227f, 228f, 229f, 230f, 231f, 232f, 233f, 234f, 235f, 236f, 237f, 238f, 239f, 240f, 241f, 242f, 243f, 244f, 245f, 246f, 247f, 248f, 249f, 250f, 251f, 252f, 253f, 254f, 255f, 256f, 257f, 258f, 259f, 260f, 261f, 262f, 263f, 264f, 265f, 266f, 267f, 268f, 269f, 270f, 271f, 272f, 273f, 274f, 275f, 276f, 277f, 278f, 279f, 280f, 281f, 282f, 283f, 284f, 285f, 286f, 287f, 288f, 289f, 290f, 291f, 292f, 293f, 294f, 295f, 296f, 297f, 298f, 299f, 300f, 301f, 302f, 303f, 304f, 305f, 306f, 307f, 308f, 309f, 310f, 311f, 312f, 313f, 314f, 315f, 316f, 317f, 318f, 319f, 320f, 321f, 322f, 321f, 320f, 319f, 318f, 317f, 316f, 315f, 314f, 313f, 312f, 311f, 310f, 309f, 308f, 307f, 306f, 305f, 304f, 303f, 302f, 301f, 300f, 299f, 298f, 297f, 296f, 295f, 294f, 293f, 292f, 291f, 290f, 289f, 288f, 287f, 286f, 285f, 284f, 283f, 282f, 282f, 283f, 284f, 283f, 282f, 281f, 280f, 279f, 278f, 278f, 278f, 278f, 277f, 276f, 277f, 277f, 276f, 276f, 276f, 276f, 275f, 274f, 273f, 273f, 273f, 273f, 272f, 271f, 271f, 272f, 272f, 271f, 272f, 272f, 273f, 274f, 275f, 276f, 276f, 276f, 276f, 276f, 276f, 277f, 278f, 279f, 279f, 279f, 278f, 278f, 279f, 279f, 279f, 279f, 280f, 281f, 282f, 283f, 284f, 285f, 286f, 287f, 288f, 288f, 289f, 290f, 291f, 291f, 291f, 292f, 293f, 294f, 295f, 296f, 297f, 298f, 299f, 299f, 300f, 301f, 302f, 303f, 304f, 305f, 306f, 307f, 308f, 309f, 310f, 311f, 312f, 313f, 314f, 315f, 316f, 317f, 318f, 319f, 320f, 321f, 322f, 323f, 324f, 325f, 326f, 327f, 328f, 329f, 330f, 331f, 332f, 333f, 334f, 335f, 336f, 337f, 338f, 339f, 340f, 341f, 342f, 341f, 341f, 342f, 343f, 344f, 345f, 346f, 347f, 348f, 349f, 350f, 351f, 352f, 353f, 354f, 355f, 356f, 357f, 358f, 359f, 360f, 361f, 362f, 363f, 364f, 365f, 366f, 367f, 368f, 369f, 370f, 371f, 372f, 373f, 374f, 375f, 376f, 377f, 378f, 379f, 380f, 381f, 382f, 383f, 384f, 385f, 386f, 387f, 388f, 389f, 390f, 390f, 391f, 392f, 393f, 394f, 395f, 396f, 397f, 398f, 399f, 400f, 401f, 402f, 403f, 404f, 405f, 406f, 407f, 408f, 409f, 410f, 411f, 412f, 413f, 414f, 414f, 414f, 414f, 413f, 412f, 411f, 410f, 410f, 411f, 411f, 411f, 412f, 413f, 413f, 413f, 412f, 411f, 410f, 410f, 409f, 409f, 409f, 410f, 411f, 412f, 413f, 414f, 414f, 413f, 413f, 414f, 415f, 416f, 417f, 418f, 419f, 420f, 421f, 422f, 422f, 423f, 424f, 425f, 426f, 427f, 428f, 429f, 429f, 429f, 428f, 427f, 426f, 425f, 425f, 425f, 426f, 427f, 427f, 426f, 425f, 426f, 426f, 427f, 428f, 429f, 430f, 431f, 432f, 432f, 432f, 432f, 432f, 433f, 434f, 435f, 436f, 437f, 438f, 439f, 439f, 438f, 437f, 436f, 435f, 434f, 433f, 432f, 432f, 432f, 432f, 431f, 430f, 430f, 431f, 431f, 431f, 431f, 430f, 430f, 431f, 432f, 432f, 431f, 430f, 429f, 429f, 429f, 429f, 429f, 430f, 429f, 429f, 430f, 430f, 431f, 432f, 433f, 434f, 435f, 436f, 437f, 438f, 439f, 440f, 441f, 442f, 443f, 444f, 445f, 445f, 445f, 445f, 446f, 447f, 448f, 449f, 450f, 451f, 451f, 451f, 451f, 452f, 453f, 454f, 455f, 456f, 457f, 458f, 459f, 460f, 461f, 462f, 463f, 464f, 465f, 466f, 467f, 468f, 469f, 470f, 471f, 472f, 473f, 474f, 475f, 476f, 477f, 478f, 479f, 480f, 481f, 482f, 483f, 484f, 485f, 486f, 487f, 488f, 489f, 490f, 491f, 492f, 493f, 494f, 495f, 496f, 497f, 498f, 499f, 500f, 501f, 502f, 503f, 504f, 505f, 506f, 507f, 507f, 506f, 505f, 505f, 505f, 505f, 506f, 507f, 508f, 509f, 510f, 511f, 512f, 513f, 512f, 511f, 510f, 509f, 508f, 507f, 506f, 505f, 504f, 503f, 502f, 501f, 501f, 502f, 501f, 500f, 499f, 498f, 497f, 498f, 498f, 499f, 499f, 498f, 497f, 496f, 496f, 496f, 496f, 496f, 496f, 496f, 496f, 496f, 495f, 494f, 494f, 495f, 495f, 495f, 495f, 495f, 496f, 497f, 498f, 499f, 500f, 501f, 502f, 503f, 504f, 505f, 506f, 506f, 507f, 508f, 509f, 510f, 511f, 512f, 513f, 513f, 512f, 512f, 511f, 510f, 510f, 511f, 512f, 513f, 513f, 514f, 515f, 516f, 517f, 518f, 519f, 519f, 520f, 520f, 520f, 520f, 520f, 521f, 522f, 521f, 521f, 522f, 522f, 523f, 524f, 525f, 526f, 526f, 526f, 527f, 527f, 528f, 528f, 527f, 526f, 526f, 525f, 524f, 523f, 522f, 521f, 520f, 519f, 518f, 517f, 516f, 515f, 514f, 513f, 512f, 511f, 510f, 509f, 508f, 507f, 506f, 505f, 504f, 503f, 502f, 501f, 501f, 501f, 500f, 500f, 499f, 499f, 498f, 497f, 496f, 497f, 498f, 498f, 499f, 500f, 501f, 502f, 503f, 504f, 504f, 505f, 504f, 503f, 502f, 502f, 502f, 502f, 502f, 502f, 502f, 503f, 504f, 505f, 506f, 507f, 508f, 508f, 508f, 509f, 510f, 511f, 512f, 513f, 514f, 515f, 516f, 517f, 518f, 517f, 516f, 515f, 514f, 513f, 512f, 512f, 512f, 512f, 512f, 513f, 514f, 515f, 516f, 517f, 518f, 519f, 520f, 521f, 522f, 523f, 524f, 525f, 526f, 527f, 528f, 528f, 527f, 527f, 527f, 527f, 527f, 527f, 527f, 528f, 529f, 530f, 531f, 532f, 531f, 532f, 532f, 533f, 533f, 534f, 535f, 536f, 537f, 538f, 539f, 540f, 541f, 542f, 541f, 540f, 540f, 540f, 541f, 542f, 543f, 544f, 545f, 546f, 547f, 548f, 549f, 550f, 551f, 552f, 553f, 553f, 553f, 552f, 552f, 552f, 552f, 552f, 552f, 552f, 552f, 552f, 552f, 551f, 550f, 550f, 551f, 551f, 551f, 551f, 552f, 553f, 554f, 553f, 553f, 553f, 552f, 552f, 552f, 553f, 554f, 555f, 556f, 556f, 555f, 555f, 556f, 557f, 558f, 559f, 560f, 561f, 562f, 563f, 564f, 564f, 563f, 563f, 564f, 565f, 566f, 565f, 564f, 565f, 566f, 566f, 566f, 566f, 566f, 567f, 568f, 569f, 570f, 570f, 570f, 570f, 569f, 569f, 568f, 567f, 566f, 566f, 565f, 564f, 563f, 562f, 562f, 562f, 562f, 562f, 561f, 561f, 561f, 561f, 561f, 561f, 562f, 563f, 564f, 563f, 563f, 564f, 565f, 564f, 564f, 564f, 565f, 565f, 566f, 567f, 568f, 569f, 570f, 570f, 570f, 571f, 572f, 573f, 574f, 575f, 575f, 576f, 577f, 577f, 576f, 575f, 576f, 576f, 576f, 577f, 578f, 579f, 580f, 581f, 582f, 583f, 584f, 585f, 585f, 586f, 587f, 588f, 589f, 590f, 591f, 592f, 593f, 594f, 595f, 596f, 597f, 598f, 599f, 600f, 601f, 602f, 603f, 604f, 605f, 606f, 607f, 608f, 609f, 610f, 611f, 612f, 613f, 614f, 615f, 616f, 617f, 618f, 619f, 620f, 620f, 619f, 618f, 619f, 620f, 621f, 622f, 623f, 624f, 625f, 626f, 627f, 628f, 628f, 628f, 628f, 628f, 629f, 630f, 631f, 632f, 633f, 634f, 635f, 636f, 637f, 638f, 639f, 640f, 641f, 642f, 643f, 644f, 645f, 646f, 647f, 648f, 649f, 650f, 651f, 652f, 653f, 654f, 655f, 656f, 656f, 655f, 654f, 653f, 652f, 651f, 651f, 652f, 653f, 654f, 655f, 656f, 657f, 658f, 659f, 660f, 661f, 662f, 663f, 664f, 665f, 666f, 667f, 668f, 669f, 670f, 671f, 672f, 673f, 674f, 675f, 676f, 677f, 678f, 679f, 680f, 681f, 682f, 683f, 684f, 685f, 686f, 687f, 688f, 689f, 690f, 691f, 692f, 693f, 694f, 695f, 696f, 697f, 698f, 699f, 700f, 701f, 702f, 703f, 704f, 705f, 706f, 707f, 708f, 709f, 710f, 711f, 712f, 713f, 714f, 715f, 716f, 717f, 718f, 719f, 720f, 719f, 719f, 718f, 717f, 716f, 716f, 717f, 718f, 719f, 720f, 721f, 721f, 721f, 722f, 723f, 724f, 725f, 726f, 727f, 726f, 726f, 725f, 725f, 725f, 725f, 726f, 727f, 728f, 729f, 730f, 731f, 732f, 733f, 734f, 735f, 736f, 737f, 738f, 737f, 738f, 739f, 740f, 741f, 741f, 741f, 740f, 740f, 739f, 740f, 740f, 740f, 739f, 739f, 739f, 738f, 737f, 736f, 735f, 735f, 735f, 735f, 734f, 734f, 734f, 734f, 733f, 732f, 731f, 731f, 731f, 730f, 729f, 728f, 727f, 726f, 725f, 724f, 723f, 724f, 723f, 722f, 722f, 723f, 724f, 725f, 726f, 727f, 727f, 728f, 728f, 727f, 726f, 725f, 724f, 723f, 722f, 721f, 720f, 720f, 719f, 718f, 717f, 717f, 716f, 715f, 714f, 715f, 716f, 717f, 718f, 719f, 718f, 718f, 718f, 719f, 720f, 720f, 720f, 720f, 720f, 720f, 719f, 720f, 720f, 719f, 718f, 717f, 717f, 716f, 715f, 715f, 714f, 714f, 715f, 714f, 713f, 713f, 713f, 714f, 715f, 714f, 715f, 715f, 714f, 713f, 712f, 711f, 710f, 709f, 708f, 707f, 706f, 705f, 705f, 704f, 704f, 705f, 705f, 704f, 704f, 705f, 706f, 707f, 707f, 707f, 708f, 709f, 709f, 708f, 708f, 708f, 708f, 708f, 707f, 706f, 707f, 707f, 707f, 707f, 706f, 706f, 706f, 706f, 707f, 707f, 708f, 709f, 710f, 711f, 711f, 712f, 713f, 714f, 715f, 716f, 717f, 718f, 719f, 720f, 721f, 722f, 722f, 723f, 724f, 725f, 725f, 724f, 724f, 724f, 725f, 726f, 727f, 727f, 728f, 729f, 730f, 731f, 732f, 733f, 733f, 733f, 734f, 735f, 736f, 737f, 738f, 739f, 740f, 741f, 742f, 743f, 744f, 745f, 746f, 747f, 747f, 746f, 746f, 745f, 744f, 743f, 742f, 742f, 742f, 743f, 742f, 742f, 741f, 741f, 741f, 741f, 742f, 743f, 744f, 745f, 746f, 747f, 748f, 749f, 750f, 751f, 752f, 753f, 754f, 755f, 756f, 757f, 758f, 759f, 760f, 761f, 762f, 763f, 764f, 765f, 766f, 767f, 768f, 769f, 770f, 771f, 771f, 772f, 773f, 774f, 775f, 776f, 777f, 778f, 779f, 780f, 781f, 782f, 783f, 784f, 785f, 786f, 787f, 788f, 787f, 787f, 786f, 785f, 785f, 784f, 784f, 783f, 784f, 785f, 786f, 787f, 788f, 789f, 790f, 791f, 792f, 793f, 793f, 794f, 795f, 795f, 795f, 795f, 794f, 795f, 796f, 797f, 798f, 799f, 800f, 801f, 802f, 803f, 804f, 805f, 805f, 804f, 803f, 802f, 801f, 800f, 799f, 798f, 799f, 800f, 801f, 802f, 803f, 804f, 805f, 806f, 807f, 807f, 806f, 805f, 804f, 803f, 802f, 801f, 800f, 801f, 802f, 803f, 804f, 805f, 806f, 807f, 808f, 809f, 810f, 811f, 812f, 811f, 810f, 810f};
private float[] xpointshigh = {776f, 776f, 776f, 776f, 776f, 776f, 776f, 776f, 777f, 777f, 777f, 777f, 777f, 777f, 777f, 777f, 777f, 777f, 777f, 777f, 777f, 777f, 778f, 778f, 778f, 778f, 778f, 778f, 778f, 778f, 778f, 778f, 778f, 778f, 778f, 778f, 779f, 779f, 779f, 779f, 779f, 779f, 779f, 779f, 779f, 779f, 779f, 779f, 779f, 779f, 780f, 780f, 780f, 780f, 780f, 780f, 780f, 780f, 780f, 780f, 780f, 780f, 780f, 780f, 781f, 781f, 781f, 781f, 781f, 781f, 781f, 781f, 781f, 781f, 781f, 781f, 781f, 781f, 782f, 782f, 782f, 782f, 782f, 782f, 782f, 782f, 782f, 782f, 782f, 782f, 782f, 782f, 783f, 783f, 783f, 783f, 783f, 783f, 783f, 783f, 783f, 783f, 783f, 783f, 783f, 783f, 784f, 784f, 784f, 784f, 784f, 784f, 784f, 784f, 784f, 784f, 784f, 784f, 784f, 784f, 785f, 785f, 785f, 785f, 785f, 785f, 785f, 785f, 785f, 785f, 785f, 785f, 785f, 785f, 786f, 786f, 786f, 786f, 786f, 786f, 786f, 786f, 786f, 786f, 786f, 786f, 786f, 786f, 787f, 787f, 787f, 787f, 787f, 787f, 787f, 787f, 787f, 787f, 787f, 787f, 787f, 787f, 788f, 788f, 788f, 788f, 788f, 788f, 788f, 788f, 788f, 788f, 788f, 788f, 788f, 788f, 789f, 789f, 789f, 789f, 789f, 789f, 789f, 789f, 789f, 789f, 789f, 789f, 788f, 789f, 790f, 790f, 790f, 791f, 792f, 792f, 792f, 792f, 792f, 791f, 790f, 791f, 792f, 792f, 792f, 793f, 793f, 793f, 794f, 795f, 796f, 797f, 797f, 797f, 798f, 797f, 796f, 796f, 795f, 794f, 794f, 794f, 794f, 795f, 796f, 797f, 798f, 799f, 800f, 801f, 802f, 803f, 804f, 805f, 805f, 805f, 806f, 807f, 808f, 807f, 807f, 808f, 809f, 810f, 811f, 812f, 813f, 814f, 815f, 816f, 817f, 818f, 819f, 820f, 821f, 822f, 823f, 824f, 825f, 825f, 825f, 825f, 825f, 826f, 827f, 828f, 829f, 830f, 831f, 832f, 832f, 833f, 833f, 834f, 833f, 834f, 835f, 836f, 837f, 838f, 839f, 840f, 841f, 842f, 843f, 844f, 845f, 846f, 847f, 848f, 848f, 847f, 846f, 845f, 844f, 843f, 843f, 843f, 844f, 845f, 846f, 846f, 847f, 847f, 847f, 847f, 847f, 848f, 848f, 847f, 848f, 849f, 848f, 847f, 847f, 848f, 849f, 850f, 851f, 852f, 852f, 851f, 852f, 853f, 854f, 855f, 856f, 857f, 858f, 859f, 860f, 861f, 862f, 863f, 864f, 865f, 866f, 867f, 867f, 868f, 869f, 869f, 868f, 868f, 868f, 869f, 870f, 871f, 872f, 873f, 874f, 874f, 874f, 875f, 876f, 877f, 878f, 878f, 878f, 877f, 876f, 875f, 874f, 873f, 874f, 875f, 876f, 877f, 878f, 879f, 880f, 881f, 882f, 883f, 884f, 885f, 886f, 886f, 885f, 884f, 884f, 885f, 886f, 887f, 888f, 889f, 890f, 891f, 892f, 893f, 894f, 895f, 896f, 897f, 898f, 899f, 900f, 901f, 902f, 903f, 904f, 905f, 906f, 907f, 906f, 905f, 904f, 905f, 906f, 907f, 908f, 909f, 910f, 911f, 912f, 913f, 914f, 915f, 916f, 917f, 918f, 919f, 920f, 921f, 922f, 923f, 924f, 923f, 922f, 922f, 923f, 924f, 925f, 926f, 927f, 928f, 928f, 927f, 926f, 927f, 928f, 929f, 930f, 931f, 932f, 933f, 934f, 935f, 936f, 937f, 938f, 939f, 940f, 941f, 942f, 943f, 944f, 945f, 946f, 947f, 948f, 949f, 950f, 951f, 952f, 953f, 954f, 955f, 956f, 957f, 958f, 959f, 960f, 961f, 962f, 963f, 964f, 965f, 966f, 967f, 968f, 969f, 970f, 971f, 972f, 973f, 974f, 975f, 976f, 976f, 975f, 974f, 975f, 976f, 977f, 978f, 979f, 980f, 981f, 982f, 983f, 984f, 984f, 985f, 986f, 987f, 986f, 985f, 984f, 983f, 982f, 981f, 982f, 982f, 982f, 981f, 980f, 979f, 978f, 977f, 976f, 975f, 974f, 973f, 972f, 971f, 970f, 969f, 968f, 967f, 966f, 965f, 964f, 963f, 962f, 961f, 960f, 959f, 958f, 957f, 956f, 955f, 954f, 953f, 952f, 951f, 950f, 949f, 948f, 948f, 949f, 948f, 947f, 946f, 947f, 947f, 946f, 945f, 944f, 943f, 942f, 941f, 940f, 939f, 938f, 937f, 936f, 935f, 934f, 933f, 932f, 931f, 930f, 929f, 928f, 927f, 926f, 925f, 924f, 923f, 922f, 921f, 920f, 919f, 918f, 917f, 916f, 915f, 914f, 913f, 912f, 911f, 910f, 909f, 908f, 907f, 906f, 905f, 904f, 903f, 902f, 901f, 900f, 899f, 898f, 897f, 896f, 895f, 894f, 893f, 892f, 891f, 890f, 889f, 888f, 887f, 886f, 885f, 884f, 883f, 882f, 881f, 881f, 881f, 880f, 879f, 879f, 879f, 879f, 879f, 878f, 877f, 876f, 875f, 874f, 874f, 875f, 876f, 877f, 878f, 879f, 880f, 881f, 882f, 881f, 880f, 879f, 878f, 877f, 876f, 875f, 874f, 873f, 873f, 874f, 874f, 875f, 876f, 876f, 875f, 874f, 873f, 872f, 871f, 870f, 869f, 868f, 867f, 867f, 866f, 865f, 864f, 864f, 863f, 862f, 861f, 860f, 861f, 861f, 861f, 862f, 862f, 861f, 860f, 860f, 861f, 861f, 860f, 859f, 858f, 857f, 856f, 855f, 854f, 853f, 852f, 851f, 850f, 849f, 850f, 851f, 851f, 852f, 851f, 850f, 850f, 850f, 850f, 849f, 848f, 847f, 846f, 845f, 844f, 843f, 842f, 841f, 840f, 839f, 838f, 837f, 836f, 835f, 834f, 833f, 833f, 833f, 832f, 831f, 830f, 829f, 828f, 827f, 826f, 825f, 824f, 824f, 824f, 825f, 826f, 826f, 825f, 824f, 823f, 822f, 821f, 821f, 821f, 821f, 820f, 820f, 820f, 820f, 820f, 820f, 821f, 822f, 822f, 822f, 821f, 820f, 821f, 821f, 821f, 821f, 821f, 821f, 821f, 821f, 821f, 821f, 821f, 821f, 821f, 821f, 822f, 822f, 822f, 822f, 822f, 822f, 822f};
private float[] zpointshigh = {165f, 166f, 167f, 168f, 169f, 170f, 171f, 172f, 173f, 174f, 175f, 176f, 177f, 178f, 179f, 180f, 181f, 182f, 183f, 184f, 185f, 186f, 187f, 188f, 189f, 190f, 191f, 192f, 193f, 194f, 195f, 196f, 197f, 198f, 199f, 200f, 201f, 202f, 203f, 204f, 205f, 206f, 207f, 208f, 209f, 210f, 211f, 212f, 213f, 214f, 215f, 216f, 217f, 218f, 219f, 220f, 221f, 222f, 223f, 224f, 225f, 226f, 227f, 228f, 229f, 230f, 231f, 232f, 233f, 234f, 235f, 236f, 237f, 238f, 239f, 240f, 241f, 242f, 243f, 244f, 245f, 246f, 247f, 248f, 249f, 250f, 251f, 252f, 253f, 254f, 255f, 256f, 257f, 258f, 259f, 260f, 261f, 262f, 263f, 264f, 265f, 266f, 267f, 268f, 269f, 270f, 271f, 272f, 273f, 274f, 275f, 276f, 277f, 278f, 279f, 280f, 281f, 282f, 283f, 284f, 285f, 286f, 287f, 288f, 289f, 290f, 291f, 292f, 293f, 294f, 295f, 296f, 297f, 298f, 299f, 300f, 301f, 302f, 303f, 304f, 305f, 306f, 307f, 308f, 309f, 310f, 311f, 312f, 313f, 314f, 315f, 316f, 317f, 318f, 319f, 320f, 321f, 322f, 323f, 324f, 325f, 326f, 327f, 328f, 329f, 330f, 331f, 332f, 333f, 334f, 335f, 336f, 337f, 338f, 339f, 340f, 341f, 342f, 343f, 344f, 345f, 346f, 347f, 348f, 349f, 350f, 351f, 352f, 353f, 354f, 355f, 356f, 357f, 358f, 359f, 360f, 361f, 362f, 363f, 364f, 365f, 366f, 367f, 368f, 369f, 370f, 371f, 372f, 373f, 374f, 375f, 376f, 377f, 378f, 379f, 380f, 381f, 382f, 383f, 384f, 385f, 386f, 387f, 388f, 387f, 387f, 387f, 387f, 386f, 385f, 386f, 386f, 386f, 387f, 388f, 389f, 390f, 391f, 392f, 393f, 394f, 395f, 394f, 393f, 393f, 394f, 395f, 395f, 395f, 396f, 396f, 396f, 396f, 396f, 397f, 397f, 398f, 399f, 400f, 401f, 402f, 403f, 404f, 405f, 405f, 406f, 407f, 408f, 409f, 410f, 411f, 412f, 413f, 414f, 415f, 416f, 416f, 417f, 417f, 418f, 419f, 419f, 420f, 420f, 420f, 421f, 422f, 423f, 424f, 425f, 426f, 427f, 428f, 429f, 430f, 431f, 432f, 433f, 434f, 435f, 436f, 437f, 438f, 439f, 440f, 441f, 442f, 443f, 444f, 445f, 446f, 447f, 448f, 449f, 450f, 451f, 452f, 452f, 452f, 453f, 454f, 455f, 456f, 457f, 456f, 457f, 457f, 458f, 459f, 458f, 458f, 457f, 456f, 455f, 455f, 456f, 456f, 457f, 458f, 459f, 460f, 461f, 462f, 463f, 464f, 465f, 465f, 465f, 465f, 465f, 466f, 467f, 468f, 469f, 469f, 469f, 470f, 471f, 472f, 473f, 474f, 475f, 476f, 477f, 478f, 479f, 480f, 480f, 479f, 478f, 478f, 479f, 480f, 481f, 481f, 481f, 482f, 483f, 484f, 485f, 486f, 487f, 488f, 489f, 490f, 490f, 490f, 490f, 491f, 492f, 492f, 492f, 493f, 494f, 495f, 495f, 495f, 494f, 494f, 494f, 493f, 493f, 493f, 494f, 495f, 496f, 497f, 498f, 498f, 499f, 500f, 500f, 499f, 500f, 501f, 501f, 500f, 501f, 502f, 501f, 500f, 501f, 502f, 503f, 503f, 504f, 505f, 506f, 507f, 508f, 509f, 510f, 511f, 511f, 511f, 512f, 513f, 514f, 515f, 516f, 516f, 517f, 518f, 518f, 518f, 519f, 519f, 520f, 520f, 521f, 521f, 522f, 522f, 522f, 523f, 523f, 524f, 524f, 523f, 522f, 522f, 522f, 522f, 523f, 524f, 524f, 524f, 524f, 525f, 526f, 527f, 527f, 528f, 529f, 529f, 530f, 531f, 530f, 530f, 531f, 530f, 531f, 530f, 530f, 530f, 530f, 529f, 529f, 530f, 531f, 532f, 533f, 534f, 534f, 534f, 534f, 534f, 534f, 534f, 535f, 535f, 536f, 537f, 538f, 538f, 539f, 540f, 541f, 542f, 543f, 544f, 545f, 546f, 547f, 548f, 549f, 550f, 551f, 552f, 553f, 554f, 555f, 556f, 557f, 558f, 559f, 560f, 561f, 562f, 563f, 564f, 565f, 566f, 567f, 568f, 569f, 570f, 571f, 572f, 573f, 574f, 575f, 576f, 577f, 578f, 579f, 580f, 581f, 582f, 583f, 584f, 585f, 586f, 587f, 588f, 589f, 590f, 591f, 592f, 593f, 594f, 595f, 596f, 597f, 598f, 599f, 600f, 601f, 602f, 603f, 604f, 605f, 606f, 607f, 608f, 609f, 610f, 611f, 612f, 613f, 614f, 615f, 616f, 617f, 618f, 619f, 620f, 621f, 622f, 623f, 624f, 625f, 626f, 627f, 628f, 629f, 630f, 631f, 632f, 633f, 634f, 635f, 636f, 637f, 638f, 639f, 640f, 641f, 642f, 643f, 644f, 645f, 646f, 647f, 648f, 649f, 650f, 651f, 652f, 653f, 654f, 655f, 656f, 657f, 658f, 659f, 660f, 661f, 662f, 663f, 664f, 665f, 666f, 667f, 668f, 669f, 670f, 671f, 671f, 671f, 671f, 671f, 671f, 672f, 673f, 674f, 675f, 676f, 677f, 678f, 679f, 680f, 681f, 682f, 683f, 684f, 685f, 686f, 687f, 688f, 689f, 690f, 691f, 692f, 693f, 694f, 695f, 696f, 697f, 698f, 699f, 700f, 701f, 702f, 703f, 704f, 705f, 706f, 707f, 708f, 709f, 710f, 711f, 712f, 713f, 714f, 715f, 716f, 717f, 718f, 719f, 720f, 721f, 722f, 723f, 724f, 725f, 726f, 727f, 728f, 729f, 730f, 731f, 732f, 733f, 734f, 735f, 736f, 737f, 738f, 739f, 740f, 741f, 742f, 743f, 744f, 745f, 746f, 747f, 748f, 749f, 750f, 751f, 752f, 753f, 754f, 755f, 756f, 757f, 758f, 759f, 760f, 761f, 762f, 763f, 764f, 765f, 766f, 767f, 768f, 769f, 770f, 771f, 772f, 773f, 774f, 775f, 776f, 777f, 778f, 779f, 780f, 781f, 782f, 783f, 784f, 785f, 786f, 787f, 788f, 789f, 790f, 791f, 792f, 793f, 794f, 795f, 796f, 797f, 798f, 799f, 800f, 801f, 802f, 803f, 804f, 805f, 806f, 807f, 808f, 809f, 810f};
private float[] checkx140;
private float[] checky140;
private float[] checkxlow = {907, 1000, 1060, 1161, 1095, 1041, 1000, 800, 801, 775};
private float[] checkylow = {725, 663, 735, 647, 546, 524, 449, 306, 305, 311};
private float[] checkxhigh = {843f, 882f, 930f, 984f, 923f, 877f, 847f, 796f, 786f, 781f};
private float[] checkyhigh = {743f, 672f, 606f, 536f, 509f, 473f, 424f, 382f, 311f, 240f};
private float[] pathx20 = {776, 776, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 791, 791, 792, 793, 794, 794, 794, 795, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 820, 820, 821, 821, 821, 822, 821, 821, 821, 820, 819, 820, 819, 820, 821, 822, 823, 823, 823, 823, 824, 824, 823, 824, 825, 826, 826, 825, 825, 824, 823, 824, 825, 826, 827, 826, 825, 824, 823, 822, 821, 822, 823, 823, 823, 824, 825, 824, 824, 824, 825, 826, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 835, 835, 836, 837, 838, 838, 839, 839, 840, 841, 842, 843, 844, 845, 846, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 859, 858, 858, 859, 860, 861, 862, 861, 861, 862, 863, 864, 865, 866, 867, 868, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 889, 889, 890, 891, 892, 893, 893, 892, 891, 890, 889, 888, 887, 888, 888, 888, 889, 888, 889, 890, 890, 891, 892, 893, 893, 893, 893, 894, 895, 896, 897, 898, 899, 900, 901, 901, 901, 902, 903, 904, 904, 905, 905, 905, 906, 907, 908, 909, 910, 911, 911, 911, 912, 913, 914, 914, 914, 914, 914, 915, 915, 915, 915, 916, 917, 918, 919, 918, 918, 918, 918, 919, 919, 919, 919, 920, 921, 922, 922, 923, 924, 925, 926, 925, 924, 923, 922, 921, 920, 919, 919, 920, 919, 919, 920, 920, 921, 922, 922, 923, 923, 923, 923, 923, 924, 925, 926, 926, 926, 926, 927, 926, 927, 928, 929, 930, 931, 932, 933, 933, 933, 933, 934, 934, 934, 933, 934, 935, 936, 937, 938, 939, 938, 937, 938, 937, 936, 936, 936, 937, 937, 938, 939, 940, 941, 942, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 967, 967, 967, 968, 969, 968, 969, 970, 971, 972, 973, 974, 974, 975, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 987, 987, 988, 989, 990, 990, 991, 992, 993, 994, 995, 995, 995, 995, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1014, 1013, 1013, 1012, 1011, 1010, 1009, 1009, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1014, 1013, 1012, 1011, 1010, 1009, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1034, 1034, 1033, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1039, 1039, 1040, 1041, 1042, 1043, 1043, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1049, 1048, 1047, 1047, 1048, 1049, 1050, 1051, 1051, 1052, 1052, 1053, 1053, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1080, 1080, 1081, 1081, 1081, 1080, 1080, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1092, 1092, 1093, 1094, 1094, 1093, 1093, 1093, 1094, 1095, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1112, 1112, 1113, 1113, 1114, 1114, 1114, 1113, 1113, 1112, 1111, 1110, 1110, 1110, 1110, 1110, 1109, 1110, 1109, 1108, 1107, 1106, 1106, 1105, 1104, 1103, 1102, 1101, 1100, 1099, 1098, 1097, 1097, 1098, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1107, 1106, 1106, 1107, 1108, 1108, 1108, 1109, 1110, 1109, 1108, 1107, 1106, 1105, 1104, 1103, 1102, 1101, 1100, 1099, 1098, 1097, 1096, 1095, 1094, 1093, 1092, 1091, 1090, 1089, 1088, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1093, 1092, 1091, 1092, 1092, 1091, 1090, 1089, 1088, 1087, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1101, 1100, 1099, 1100, 1101, 1101, 1101, 1100, 1099, 1098, 1097, 1096, 1095, 1094, 1093, 1092, 1091, 1090, 1089, 1088, 1087, 1086, 1085, 1084, 1083, 1082, 1083, 1083, 1082, 1081, 1080, 1081, 1082, 1083, 1083, 1082, 1081, 1080, 1079, 1078, 1077, 1076, 1075, 1074, 1073, 1072, 1072, 1072, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1102, 1102, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1121, 1121, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1150, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1178, 1178, 1179, 1180, 1179, 1178, 1177, 1176, 1175, 1174, 1173, 1173, 1174, 1175, 1174, 1173, 1172, 1171, 1170, 1169, 1168, 1167, 1166, 1165, 1165, 1166, 1167, 1166, 1167, 1166, 1165, 1164, 1163, 1162, 1161, 1161, 1161, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1180, 1180, 1181, 1181, 1180, 1179, 1178, 1178, 1177, 1177, 1178, 1179, 1179, 1180, 1181, 1180, 1179, 1179, 1180, 1180, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1214, 1213, 1213, 1213, 1212, 1211, 1210, 1209, 1208, 1207, 1206, 1205, 1204, 1205, 1205, 1206, 1206, 1207, 1207, 1208, 1207, 1208, 1208, 1209, 1210, 1211, 1212, 1213, 1212, 1212, 1211, 1211, 1211, 1210, 1209, 1209, 1209, 1208, 1207, 1207, 1208, 1208, 1208, 1208, 1208, 1207, 1206, 1205, 1204, 1203, 1202, 1201, 1200, 1199, 1198, 1197, 1196, 1195, 1194, 1193, 1192, 1191, 1190, 1189, 1188, 1187, 1187, 1187, 1186, 1185, 1184, 1183, 1182, 1181, 1180, 1179, 1178, 1177, 1176, 1175, 1174, 1173, 1172, 1171, 1170, 1169, 1170, 1171, 1172, 1173, 1174, 1174, 1173, 1173, 1172, 1171, 1170, 1169, 1169, 1168, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1176, 1176, 1176, 1177, 1177, 1177, 1177, 1176, 1176, 1175, 1175, 1175, 1175, 1175, 1175, 1175, 1175, 1174, 1174, 1174, 1174, 1175, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1185, 1185, 1186, 1187, 1188, 1189, 1189, 1189, 1189, 1190, 1189, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1195, 1195, 1195, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1203, 1202, 1201, 1200, 1199, 1198, 1197, 1196, 1196, 1195, 1195, 1194, 1193, 1192, 1191, 1192, 1193, 1192, 1191, 1191, 1192, 1193, 1193, 1193, 1193, 1194, 1193, 1192, 1192, 1191, 1190, 1189, 1188, 1187, 1186, 1186, 1186, 1187, 1188, 1189, 1190, 1191, 1190, 1189, 1188, 1187, 1186, 1185, 1184, 1183, 1182, 1181, 1180, 1179, 1179, 1178, 1177, 1176, 1175, 1174, 1173, 1172, 1171, 1170, 1170, 1170, 1170, 1169, 1169, 1169, 1169, 1170, 1170, 1171, 1171, 1172, 1172, 1172, 1171, 1171, 1171, 1170, 1169, 1169, 1170, 1169, 1168, 1167, 1168, 1167, 1167, 1167, 1166, 1167, 1166, 1165, 1164, 1163, 1162, 1161, 1160, 1159, 1158, 1157, 1157, 1156, 1155, 1154, 1153, 1152, 1151, 1150, 1149, 1148, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1156, 1155, 1154, 1154, 1154, 1155, 1155, 1156, 1155, 1154, 1153, 1152, 1151, 1150, 1149, 1148, 1148, 1148, 1148, 1147, 1146, 1145, 1144, 1143, 1142, 1141, 1140, 1139, 1138, 1137, 1136, 1135, 1134, 1133, 1132, 1131, 1130, 1129, 1128, 1128, 1127, 1126, 1125, 1124, 1123, 1122, 1121, 1121, 1120, 1119, 1118, 1117, 1116, 1115, 1114, 1114, 1113, 1112, 1111, 1110, 1109, 1108, 1107, 1106, 1105, 1104, 1103, 1102, 1102, 1101, 1100, 1099, 1099, 1099, 1098, 1098, 1097, 1096, 1095, 1094, 1093, 1092, 1091, 1090, 1089, 1088, 1088, 1089, 1090, 1091, 1091, 1090, 1089, 1089, 1088, 1089, 1090, 1090, 1090, 1091, 1091, 1090, 1089, 1089, 1089, 1089, 1090, 1090, 1089, 1088, 1087, 1086, 1085, 1084, 1083, 1082, 1081, 1081, 1081, 1081, 1080, 1080, 1080, 1080, 1080, 1080, 1079, 1079, 1078, 1077, 1076, 1075, 1075, 1074, 1073, 1072, 1072, 1071, 1070, 1069, 1068, 1067, 1066, 1066, 1066, 1065, 1064, 1063, 1063, 1062, 1061, 1060, 1060, 1061, 1060, 1060, 1060, 1059, 1058, 1057, 1056, 1055, 1054, 1053, 1052, 1051, 1050, 1049, 1048, 1047, 1046, 1045, 1045, 1044, 1044, 1043, 1042, 1041, 1040, 1040, 1039, 1038, 1038, 1037, 1038, 1039, 1040, 1040, 1039, 1038, 1037, 1036, 1035, 1034, 1033, 1032, 1031, 1030, 1029, 1028, 1027, 1026, 1025, 1024, 1023, 1022, 1021, 1020, 1019, 1018, 1017, 1016, 1015, 1014, 1013, 1012, 1011, 1010, 1009, 1008, 1007, 1006, 1005, 1004, 1005, 1005, 1005, 1006, 1005, 1004, 1003, 1002, 1001, 1000, 999, 998, 997, 996, 995, 994, 993, 992, 991, 990, 989, 988, 987, 986, 985, 984, 983, 982, 981, 980, 979, 978, 977, 976, 975, 974, 973, 972, 972, 971, 971, 970, 969, 968, 969, 969, 968, 967, 966, 965, 964, 963, 962, 961, 960, 960, 959, 958, 957, 956, 955, 954, 953, 952, 951, 950, 949, 948, 947, 946, 945, 944, 943, 942, 941, 940, 940, 941, 941, 940, 939, 939, 938, 937, 936, 935, 934, 933, 932, 931, 930, 929, 928, 927, 927, 928, 928, 928, 927, 926, 926, 925, 926, 927, 926, 927, 928, 929, 929, 929, 930, 931, 930, 929, 928, 927, 926, 925, 924, 923, 923, 924, 923, 922, 922, 923, 924, 925, 926, 925, 926, 925, 924, 923, 922, 921, 920, 919, 918, 917, 916, 916, 916, 915, 914, 914, 914, 914, 913, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 922, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 936, 936, 937, 938, 937, 938, 939, 939, 939, 939, 939, 938, 939, 940, 940, 939, 938, 938, 938, 937, 936, 935, 935, 935, 934, 933, 932, 931, 930, 929, 928, 927, 926, 925, 924, 923, 922, 921, 920, 919, 918, 917, 916, 915, 915, 916, 915, 914, 914, 913, 912, 911, 910, 909, 909, 909, 908, 907, 906, 906, 905, 904, 903, 902, 901, 900, 899, 898, 898, 899, 900, 901, 900, 900, 900, 901, 902, 903, 903, 902, 903, 902, 901, 900, 899, 898, 898, 897, 896, 895, 894, 893, 892, 891, 890, 889, 888, 887, 886, 885, 884, 883, 882, 881, 880, 879, 878, 877, 876, 875, 874, 873, 873, 872, 871, 870, 869, 868, 867, 866, 865, 864, 863, 863, 864, 865, 865, 865, 866, 865, 864, 864, 863, 862, 862, 861, 860, 859, 858, 857, 856, 855, 854, 854, 854, 853, 852, 851, 850, 849, 848, 847, 846, 845, 846, 846, 845, 844, 845, 845, 845, 844, 845, 844, 843, 842, 841, 840, 839, 838, 837, 836, 835, 835, 834, 833, 832, 831, 830, 829, 828, 827, 826, 826, 826, 826, 826, 826, 825, 825, 824, 823, 822};
private float[] pathy20 = {165, 166, 167, 168, 168, 167, 167, 168, 168, 169, 169, 170, 171, 172, 173, 174, 175, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 186, 187, 187, 186, 186, 186, 186, 187, 188, 189, 188, 187, 186, 186, 187, 188, 188, 187, 188, 187, 187, 187, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 213, 214, 215, 216, 217, 218, 219, 220, 220, 221, 222, 223, 224, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 240, 240, 240, 241, 240, 241, 240, 239, 238, 237, 236, 237, 238, 239, 240, 241, 242, 243, 243, 243, 242, 242, 243, 244, 245, 244, 244, 245, 246, 247, 247, 246, 245, 244, 243, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 254, 254, 255, 255, 256, 257, 258, 259, 260, 259, 259, 258, 258, 257, 256, 256, 256, 256, 255, 256, 257, 258, 258, 259, 259, 259, 259, 260, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 269, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 288, 289, 289, 290, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 332, 333, 334, 335, 336, 336, 337, 338, 339, 339, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 365, 365, 364, 363, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 372, 372, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 389, 390, 389, 388, 387, 386, 385, 385, 386, 386, 386, 385, 384, 383, 384, 384, 384, 384, 384, 384, 383, 384, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 394, 393, 393, 394, 395, 396, 397, 398, 397, 397, 397, 398, 398, 398, 398, 398, 397, 397, 396, 395, 394, 393, 393, 392, 391, 390, 389, 388, 388, 387, 386, 385, 384, 383, 382, 381, 380, 380, 380, 379, 379, 380, 380, 380, 379, 378, 377, 376, 375, 375, 375, 375, 376, 377, 378, 379, 380, 381, 382, 381, 382, 383, 384, 385, 386, 387, 386, 387, 388, 389, 390, 391, 392, 392, 392, 393, 394, 394, 394, 395, 395, 395, 394, 393, 393, 393, 394, 393, 393, 394, 394, 394, 395, 396, 397, 398, 399, 400, 400, 399, 400, 400, 399, 398, 397, 396, 395, 394, 393, 392, 391, 390, 389, 388, 387, 386, 386, 385, 384, 383, 382, 381, 381, 380, 380, 380, 379, 378, 377, 376, 375, 374, 373, 373, 372, 371, 370, 369, 368, 367, 366, 365, 364, 363, 363, 363, 362, 361, 360, 359, 359, 358, 358, 358, 359, 359, 360, 360, 359, 358, 358, 357, 357, 357, 356, 357, 357, 357, 358, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 370, 370, 371, 371, 371, 370, 369, 369, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 383, 383, 384, 384, 384, 383, 382, 381, 382, 382, 383, 383, 383, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 403, 404, 405, 406, 407, 406, 406, 407, 408, 409, 409, 410, 411, 412, 413, 414, 415, 416, 416, 415, 416, 417, 417, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 430, 429, 429, 429, 429, 429, 429, 430, 429, 429, 429, 429, 430, 431, 432, 432, 433, 433, 434, 435, 436, 437, 437, 438, 438, 439, 440, 441, 442, 443, 444, 445, 446, 446, 446, 447, 448, 449, 450, 450, 450, 450, 451, 452, 452, 453, 452, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 466, 467, 468, 468, 467, 467, 467, 468, 469, 470, 470, 470, 470, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 483, 483, 482, 481, 481, 480, 481, 482, 483, 484, 485, 486, 487, 488, 487, 486, 487, 486, 487, 488, 489, 490, 491, 492, 491, 491, 491, 491, 491, 491, 491, 491, 491, 492, 493, 493, 494, 494, 494, 493, 494, 493, 493, 494, 495, 496, 497, 498, 499, 498, 498, 497, 497, 497, 496, 495, 496, 497, 498, 499, 498, 497, 497, 497, 497, 498, 499, 500, 501, 502, 501, 500, 499, 499, 500, 499, 500, 501, 502, 501, 500, 499, 499, 499, 499, 498, 497, 497, 497, 498, 498, 498, 498, 499, 500, 500, 501, 502, 503, 504, 505, 506, 507, 507, 507, 506, 505, 504, 503, 503, 502, 502, 503, 503, 504, 505, 506, 507, 506, 506, 506, 507, 508, 509, 508, 509, 509, 509, 510, 510, 511, 512, 513, 514, 515, 516, 517, 517, 517, 517, 516, 517, 518, 519, 520, 521, 522, 523, 522, 523, 523, 524, 524, 524, 524, 525, 526, 527, 528, 529, 530, 531, 531, 531, 531, 532, 533, 534, 535, 536, 537, 536, 536, 536, 536, 536, 536, 537, 537, 537, 538, 537, 537, 537, 537, 538, 538, 538, 539, 540, 541, 542, 543, 544, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 562, 563, 564, 564, 565, 566, 567, 568, 569, 569, 570, 571, 572, 573, 572, 571, 571, 572, 571, 570, 570, 570, 570, 571, 570, 570, 571, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 581, 581, 582, 583, 582, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 594, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 614, 613, 613, 613, 612, 611, 611, 611, 612, 613, 614, 615, 615, 616, 615, 615, 615, 616, 617, 618, 619, 620, 621, 622, 623, 623, 623, 622, 622, 621, 621, 621, 622, 623, 624, 625, 624, 625, 625, 626, 627, 628, 629, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 642, 641, 640, 640, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 668, 668, 667, 667, 668, 669, 670, 671, 672, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 680, 680, 681, 681, 682, 683, 684, 685, 686, 687, 688, 688, 688, 689, 690, 690, 691, 692, 693, 694, 695, 696, 697, 698, 697, 696, 697, 698, 699, 700, 701, 702, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 717, 716, 716, 716, 717, 718, 719, 720, 721, 721, 722, 723, 724, 725, 726, 726, 726, 727, 728, 729, 729, 730, 729, 728, 727, 726, 726, 725, 724, 723, 722, 723, 723, 722, 721, 720, 719, 718, 717, 716, 715, 714, 713, 712, 711, 710, 709, 708, 707, 706, 705, 704, 703, 702, 701, 700, 699, 698, 697, 696, 695, 694, 693, 692, 691, 690, 690, 689, 688, 687, 687, 687, 687, 688, 689, 690, 690, 691, 692, 691, 690, 690, 689, 688, 687, 686, 685, 685, 685, 684, 683, 683, 683, 682, 681, 680, 679, 678, 677, 676, 675, 674, 673, 672, 672, 672, 672, 672, 673, 672, 671, 670, 669, 668, 669, 670, 671, 670, 669, 670, 670, 671, 671, 672, 673, 673, 672, 671, 672, 672, 673, 673, 674, 675, 676, 676, 675, 674, 674, 674, 675, 676, 677, 677, 676, 676, 677, 677, 678, 679, 680, 681, 681, 681, 681, 681, 680, 681, 680, 679, 680, 679, 678, 677, 678, 679, 680, 681, 682, 683, 684, 684, 684, 684, 684, 685, 686, 686, 686, 687, 688, 689, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 711, 711, 711, 712, 711, 710, 709, 708, 707, 706, 705, 704, 703, 702, 701, 700, 699, 698, 698, 699, 700, 701, 702, 702, 703, 704, 705, 704, 703, 702, 702, 703, 704, 705, 706, 706, 705, 704, 703, 703, 702, 701, 700, 699, 698, 697, 696, 696, 697, 698, 698, 697, 696, 696, 697, 696, 696, 696, 696, 696, 697, 698, 699, 700, 701, 701, 702, 701, 700, 699, 698, 697, 696, 695, 694, 693, 692, 691, 691, 690, 690, 689, 688, 687, 686, 686, 685, 685, 685, 684, 683, 682, 682, 681, 680, 679, 678, 677, 676, 676, 677, 678, 678, 678, 678, 677, 676, 676, 676, 676, 677, 676, 675, 674, 673, 672, 671, 670, 669, 668, 667, 668, 669, 670, 669, 669, 669, 670, 670, 670, 671, 672, 672, 673, 673, 672, 673, 673, 673, 673, 673, 672, 672, 672, 672, 671, 671, 671, 670, 669, 668, 667, 666, 665, 664, 664, 663, 662, 661, 660, 659, 659, 660, 661, 662, 662, 663, 662, 661, 660, 660, 660, 661, 661, 662, 663, 663, 663, 662, 662, 663, 664, 664, 664, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 673, 673, 674, 674, 675, 676, 675, 676, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 698, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 709, 710, 711, 712, 713, 714, 715, 715, 716, 716, 717, 716, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 728, 729, 730, 731, 731, 732, 732, 732, 733, 734, 735, 736, 736, 736, 736, 737, 738, 739, 739, 740, 740, 740, 740, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 766, 766, 767, 768, 768, 769, 769, 770, 769, 768, 768, 768, 769, 770, 771, 771, 771, 771, 772, 773, 774, 775, 776, 777, 778, 778, 777, 776, 777, 778, 779, 780, 781, 782, 783, 784, 784, 785, 785, 785, 785, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 794, 795, 796, 797, 798, 799, 799, 800, 801, 800, 799, 798, 798, 799, 799, 800, 801, 800, 800, 800, 799, 798, 797, 797, 797, 796, 795, 794, 793, 792, 791, 791, 790, 789, 790, 791, 792, 793, 793, 794, 795, 796, 796, 797, 797, 797, 796, 795, 794, 793, 792, 791, 790, 789, 788, 787, 786, 785, 784, 783, 783, 784, 785, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 792, 791, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 802, 801, 800, 800, 801, 800, 799, 799, 800, 801, 802, 802, 803, 802, 802, 801, 800, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 809, 810};
private float[] checkx200 = {932, 975, 1090, 1190, 1205, 1170, 1092, 1058, 956, 880};
private float[] checky200 = {766, 671, 689, 724, 613, 509, 451, 359, 384, 257};
public int pointNum = 0;
public float x;
public float z;
public float currentVelocity;
public float goalRotation = 0;
public float error = 0;
public float currentRotationalVelocity;
public bool goingRight;
public float adjust;
public bool unskippable = false;
private float CheckpointTime = 0;
private bool aligned = false;
public GameObject checkpointImage;
public GameObject path15;
public GameObject path20;
public GameObject deltaH;
    // Update is called once per frame
    void Start(){
        theRB.transform.parent= null;
        timeVar = 0;
        timeVar2 = 0;
        doneWithRotation = false;
        done = true;
        Debug.Log("Slope");
        Debug.Log(maxSlopeNumber);
        Debug.Log("Prio");
        Debug.Log(prio);
        if(maxSlopeNumber == 0){
            xpoints = xpointslow;
            zpoints = zpointslow;
            checkx140 = checkxlow;
            checky140 = checkylow;
            path15.SetActive(true);
        }
        else if(maxSlopeNumber == 1){
            xpoints = xpointshigh;
            zpoints = zpointshigh;
            checkx140 = checkxhigh;
            checky140 = checkyhigh;
            path20.SetActive(true);

        }
        if(prio == 1){
            xpoints = pathx20;
            zpoints = pathy20;
            checkx140 = checkx200;
            checky140 = checky200;
             path20.SetActive(false);
             path15.SetActive(false);
             deltaH.SetActive(true);
        }
   
    }
    void Update()
    {
        speedInput = 0f;
        if(Input.GetAxisRaw("Vertical") > 0){
            speedInput = Input.GetAxis("Vertical") * fowardAccel * 1000f;
        }
        else if(Input.GetAxisRaw("Vertical") < 0){
            speedInput = Input.GetAxis("Vertical") * reverseAccel * 1000f;
        }
        turnInput = Input.GetAxisRaw("Horizontal");
        // transform.rotation = Quaternion.Euler(transform.rotation.eulerAngles + new Vector3(0f, turnInput * turnStrength * Time.deltaTime, 0f));
         //transform.position = theRB.transform.position;



       
    }
    private void FixedUpdate(){
        grounded = false;
        RaycastHit hit;
        if(Physics.Raycast(groundRayPoint.position, -transform.up, out hit, groundRayLenght, whatisGround)){
            grounded = true;
        }
        if(Mathf.Abs(speedInput) > 0){
            //theRB.AddForce(transform.forward * speedInput);
            
        }

        timeVar2 += Time.deltaTime;
    if(timeVar2 > 2 && grounded){
     moveToPoint();
    }
    else{
        theRB.AddForce(Vector3.up * -gravityforce * 100f);
    }

        
        
    }

    void moveToPoint(){
        timeVar += Time.deltaTime;

        if(done){
            if(timeVar > .5){
                done = false;
                doneWithRotation = true; 
                x = xpoints[pointNum] * 39;
                z = (1276 - zpoints[pointNum]) * 39;
                float currentX = transform.position.x;
      /*  float currentZ = transform.position.z;
        float Xdiff = x - currentX;
        float Zdiff = z - currentZ;
        float tangent = 0;
        if(Zdiff > 0){
        tangent = Xdiff/Zdiff;
        goalRotation = Mathf.Atan(tangent) * 180/Mathf.PI;
        }
        else{
        if(Xdiff > 0){
        tangent = Zdiff/Xdiff;
        goalRotation = Mathf.Abs((Mathf.Atan(tangent) * 180/Mathf.PI)) + 90;
        }
        else{
        tangent = Zdiff/Xdiff;
        goalRotation = (Mathf.Atan(tangent) * 180/Mathf.PI) + 180;
        }
        }
        Debug.Log(Xdiff);
        Debug.Log(Zdiff);
        Debug.Log(tangent);
  
  
         if((x - currentX) > 0){
            goingRight = true;
         }
         else{
            goingRight = false;
         }*/
         unskippable = false;
                 for(int c = 0; c < checkx140.Length; c++){
            if(checkx140[c] == xpoints[pointNum]){
                for(int b = 0; b< checky140.Length; b++){
                    if(checky140[b] == zpoints[pointNum]){
                        unskippable = true;
                        Debug.Log("Checkpoint");
                    }
                }
            }
        }

        pointNum++;
        timeVar = 0;

            }
        }
        if(done == false){


  float currentX = transform.position.x;
        float currentZ = transform.position.z;
        float Xdiff = x - currentX;
        float Zdiff = z - currentZ;

        error = Mathf.Sqrt((Xdiff * Xdiff) + (Zdiff * Zdiff));


       if(error > 300 || unskippable){
 
        
        
 
        error = error * 1.3f;

     /*  if(goingRight && currentX > x){
            error = -error;
        }
        else if(goingRight == false && currentX < x){
            error = -error;
        }*/
 
        float currentRotation = transform.eulerAngles.y;
        float rotationError = 0;


   
                if(Mathf.Abs(error) > maxForwardSpeed){
            if(error < 0){
                error = -1 * maxForwardSpeed;
            }
            else{
                error = maxForwardSpeed;
            }
         }

         
        currentVelocity = (Mathf.Sqrt((theRB.velocity.x * theRB.velocity.x)+(theRB.velocity.z * theRB.velocity.z)));
        float forceDiff = Mathf.Abs(error) - currentVelocity;
        if(error < 0){
            forceDiff = forceDiff * -1;
        }
        currentRotationalVelocity = theRB.angularVelocity.y * 180/Mathf.PI;

        


       /* if(doneWithRotation == false){
        theRB.AddTorque(0, rotationalForceDiff, 0);
              if(timeVar > 2 && Mathf.Abs(currentRotationalVelocity) < 1){
                //theRB.AddTorque(0, -(theRB.angularVelocity.y * 180/Mathf.PI), 0);
                transform.localEulerAngles = new Vector3(transform.eulerAngles.x,goalRotation,transform.eulerAngles.z);

                doneWithRotation = true;
                timeVar = 0;

        }
    }*/
  

        

        float tangent = 0;
        if(Zdiff > 0){
        tangent = Xdiff/Zdiff;
        adjust = Mathf.Atan(tangent) * 180/Mathf.PI;
        }
        else{
        if(Xdiff > 0){
        tangent = Zdiff/Xdiff;
        adjust = Mathf.Abs((Mathf.Atan(tangent) * 180/Mathf.PI)) + 90;
        }
        else{
        tangent = Zdiff/Xdiff;
        adjust = (Mathf.Atan(tangent) * 180/Mathf.PI) + 180;
        }
        }

     //   Debug.Log("Prev Adjust");
      //  Debug.Log(adjust);
                    //theRB.AddTorque(0, rotationalForceDiff, 0);
            if(Mathf.Abs(error) > 50 && checkpointImage.activeInHierarchy == false){
                if(Mathf.Abs(transform.eulerAngles.y - adjust) > 1.5f && Mathf.Abs(transform.eulerAngles.y - adjust) < 358.5f ){
                   // Debug.Log(Mathf.Abs(transform.eulerAngles.y - adjust));
                    if((transform.eulerAngles.y - adjust) > 0){
                        adjust = transform.eulerAngles.y - 1.5f;
                    }
                    else{
                        adjust = transform.eulerAngles.y + 1.5f;
                    }
                    forceDiff = 0;
                }
                transform.localEulerAngles = new Vector3(transform.eulerAngles.x,adjust,transform.eulerAngles.z);   

            }
                   
                   theRB.AddForce(transform.forward * forceDiff);
                         
                        if(timeVar > 1 && Mathf.Abs(error) < 50){
                          theRB.velocity = new Vector3(0, 0, 0);
          

            //transform.localEulerAngles = new Vector3(transform.eulerAngles.x,goalRotation,transform.eulerAngles.z);
            if(CheckpointTime == 0){
            CheckpointTime = timeVar;
            }



            done = true;
            Debug.Log("here");
            
     

        }
        if(done && unskippable){
            checkpointImage.SetActive(true);
            Debug.Log("here2");
            done = false;
            theRB.velocity = new Vector3(0, 0, 0);
            Xdiff = Earth.position.x - currentX;
            Zdiff = Earth.position.z - currentZ;
        if(Zdiff >= 0){
        tangent = Xdiff/Zdiff;
        adjust = Mathf.Atan(tangent) * 180/Mathf.PI;
        }
        else if(Zdiff < 0){
        if(Xdiff > 0){
        tangent = Zdiff/Xdiff;
        adjust = Mathf.Abs((Mathf.Atan(tangent) * 180/Mathf.PI)) + 90;
        }
        else{
        tangent = Zdiff/Xdiff;
        adjust = (Mathf.Atan(tangent) * 180/Mathf.PI) + 180;
        }
    }
    float positionlol = Mathf.Abs(transform.eulerAngles.y - adjust);
    float rand = adjust;
    Vector3 relativePos = Earth.position - transform.position;
    transform.rotation =  Quaternion.RotateTowards(transform.rotation, Quaternion.LookRotation(relativePos, Vector3.up), 50f * Time.deltaTime);
                        if(Mathf.Abs(transform.eulerAngles.y - adjust) > 1.5f && Mathf.Abs(transform.eulerAngles.y - adjust) < 358.5f ){
                   // Debug.Log(Mathf.Abs(transform.eulerAngles.y - adjust));
                    if((transform.eulerAngles.y - adjust) > 0){
                        adjust = transform.eulerAngles.y - 1.5f;
                    }
                    else{
                        adjust = transform.eulerAngles.y + 1.5f;
                    }
                 
                }
                //transform.localEulerAngles = new Vector3(transform.eulerAngles.x,adjust,transform.eulerAngles.z);   

            Debug.Log("Waiting");
            Debug.Log(Earth.position.x);
            Debug.Log(Earth.position.z);
            Debug.Log(rand);
            if(timeVar > (CheckpointTime + 5)){
                done = true;
                CheckpointTime = 0;
                checkpointImage.SetActive(false);
            }
        
   

        
}
}
else
{
            done = true;
            Debug.Log("Skipped");   
}
}
   

    }
}
